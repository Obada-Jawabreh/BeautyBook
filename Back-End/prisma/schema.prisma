datasource db {
  provider = "mysql"
  url      = "mysql://root:1234@localhost:3306/beautybook"
}

generator client {
  provider = "prisma-client-js"
}

//---------------------------


model User {
  id              Int               @id @default(autoincrement())
  firstName       String
  lastName        String
  email           String            @unique
  password        String
  phoneNumber     String?
  profilePicture  String?
  isActive        Boolean           @default(true)
  role            String            @default("customer")
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  requests        Request[] @relation("UserRequests")
  appointments    Appointment[]     @relation("ProviderAppointments") 
  services        Service[]         @relation("UserServices")
  bookings        Booking[]         @relation("UserBookings")
  providerBookings Booking[]         @relation("ProviderBookings")

  @@map("users") 
}
//-------------Request--------------
model Request {
  id                 Int      @id @default(autoincrement())
  userId             Int
  profession         String
  certificate        String
  resume             String
  aboutMe             String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  user               User     @relation(fields: [userId], references: [id], name: "UserRequests")
  @@map("requests") 
}


//-------------Appointment--------------
model Appointment {
  id            Int       @id @default(autoincrement()) 
  provider_id   Int      
  schedule_date DateTime  
  start_time    String  
  end_time      String  
  createdAt     DateTime  @default(now()) 
  updatedAt     DateTime  @updatedAt 

  provider      User      @relation(fields: [provider_id], references: [id] , name: "ProviderAppointments") 

   bookings        Booking[]         @relation("AppointmentBookings")

  @@map("appointments")  
}
//-------------Service--------------

model Service {
  id            Int       @id @default(autoincrement())
  provider_id   Int
  name          String
  price         Float
  description   String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  user          User      @relation(fields: [provider_id], references: [id], name: "UserServices")
  bookings        Booking[]         @relation("ServiceBookings")
  @@map("services")
}
//-------------Booking--------------
model Booking {
  id              Int       @id @default(autoincrement())
  clientId        Int       
  providerId      Int 
  appointmentId   Int      
  serviceId       Int           
  status          String    @default("pending")

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  user            User      @relation(fields: [clientId], references: [id] , name: "UserBookings")
  provider        User      @relation(fields: [providerId], references: [id], name: "ProviderBookings")
  appointment     Appointment @relation(fields: [appointmentId], references: [id], name: "AppointmentBookings" )
  service         Service   @relation(fields: [serviceId], references: [id], name: "ServiceBookings" )

  @@map("bookings")
}